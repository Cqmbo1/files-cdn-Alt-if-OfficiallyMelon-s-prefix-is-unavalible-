"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[9,10],{2707:(p,h,r)=>{var m=r(2530),L=r(1179);L.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(L.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=m.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((p=>{this._texture._sphericalPolynomial=p,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(p){this._texture&&(this._texture._sphericalPolynomial=p)},enumerable:!0,configurable:!0})},2746:(p,h,r)=>{r.r(h),r.d(h,{Dispose:()=>P,DumpData:()=>s,DumpDataAsync:()=>x,DumpFramebuffer:()=>T,DumpTools:()=>G});var m=r(2550),L=r(1363),z=r(1173),C=r(1170);let v,O=null;async function T(p,h,r,m){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,C=arguments.length>6?arguments[6]:void 0;const v=await r.readPixels(0,0,p,h);s(p,h,new Uint8Array(v.buffer),m,L,z,!0,void 0,C)}function x(p,h,r){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],v=arguments.length>7?arguments[7]:void 0;return new Promise((O=>{s(p,h,r,(p=>O(p)),m,L,z,C,v)}))}function s(p,h,T,x){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],M=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8?arguments[8]:void 0;(async function(){return O||(O=new Promise(((p,h)=>{let L,z=null;const O={preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};r.e(6).then(r.bind(r,2462)).then((T=>{let{ThinEngine:x}=T;try{L=new OffscreenCanvas(100,100),z=new x(L,!1,O)}catch(p){L=document.createElement("canvas"),z=new x(L,!1,O)}C.e.Instances.pop(),C.e.OnEnginesDisposedObservable.add((p=>{z&&p!==z&&!z.isDisposed&&0===C.e.Instances.length&&P()})),z.getCaps().parallelShaderCompile=void 0;const s=new m.e(z);r.e(42).then(r.bind(r,11332)).then((r=>{let{passPixelShader:C}=r;if(!z)return void h("Engine is not defined");const O=new m.f({engine:z,name:C.name,fragmentShader:C.shader,samplerNames:["textureSampler"]});v={canvas:L,engine:z,renderer:s,wrapper:O},p(v)}))})).catch(h)}))),await O})().then((r=>{if(r.engine.setSize(p,h,!0),T instanceof Float32Array){const p=new Uint8Array(T.length);let h=T.length;for(;h--;){const r=T[h];p[h]=Math.round(255*(0,z.d)(r))}T=p}const m=r.engine.createRawTexture(T,p,h,5,!1,!k,1);r.renderer.setViewport(),r.renderer.applyEffectWrapper(r.wrapper),r.wrapper.effect._bindTexture("textureSampler",m),r.renderer.draw(),M?L.i.ToBlob(r.canvas,(p=>{const h=new FileReader;h.onload=p=>{const h=p.target.result;x&&x(h)},h.readAsArrayBuffer(p)}),s,H):L.i.EncodeScreenshotCanvasData(r.canvas,x,s,G,H),m.dispose()}))}function P(){var p;v?(v.wrapper.dispose(),v.renderer.dispose(),v.engine.dispose()):null===(p=O)||void 0===p||p.then((p=>{p.wrapper.dispose(),p.renderer.dispose(),p.engine.dispose()}));O=null,v=null}const G={DumpData:s,DumpDataAsync:x,DumpFramebuffer:T,Dispose:P};L.i.DumpData=s,L.i.DumpDataAsync=x,L.i.DumpFramebuffer=T},2737:(p,h,r)=>{r.d(h,{e:()=>k,h:()=>I,k:()=>j,n:()=>c});var m=r(1363),L=r(1140),z=r(1173),C=r(2504),v=r(1281),O=r(1179),T=(r(1355),r(2548)),x=r(1238);r(2693),r(2707),r(2746);const s="image/png",P=2,G=[134,22,135,150,246,214,150,54];function k(p){const h=new DataView(p.buffer,p.byteOffset,p.byteLength);let r=0;for(let p=0;p<G.length;p++)if(h.getUint8(r++)!==G[p])return x.e.Error("Not a babylon environment map"),null;let m="",L=0;for(;L=h.getUint8(r++);)m+=String.fromCharCode(L);let z=JSON.parse(m);return z=M(z),z.specular&&(z.specular.specularDataPosition=r,z.specular.lodGenerationScale=z.specular.lodGenerationScale||.8),z}function M(p){if(p.version>P)throw new Error(`Unsupported babylon environment map version "${p.version}". Latest supported version is "${P}".`);return 2===p.version?p:p={...p,version:2,imageType:s}}function H(p,h){const r=(h=M(h)).specular;let m=Math.log2(h.width);if(m=Math.round(m)+1,r.mipmaps.length!==6*m)throw new Error(`Unsupported specular mipmaps number "${r.mipmaps.length}"`);const L=new Array(m);for(let h=0;h<m;h++){L[h]=new Array(6);for(let m=0;m<6;m++){const z=r.mipmaps[6*h+m];L[h][m]=new Uint8Array(p.buffer,p.byteOffset+r.specularDataPosition+z.position,z.length)}}return L}function I(p,h,r){const m=(r=M(r)).specular;if(!m)return Promise.resolve();p._lodGenerationScale=m.lodGenerationScale;return E(p,H(h,r),r.imageType)}function U(p,h,r,m,L,z,C,v,O,T,x){return new Promise(((s,P)=>{if(r){const r=h.createTexture(null,!0,!0,null,1,null,(p=>{P(p)}),p);null===m||void 0===m||m.onEffectCreatedObservable.addOnce((v=>{v.executeWhenCompiled((()=>{m.externalTextureSamplerBinding=!0,m.onApply=m=>{m._bindTexture("textureSampler",r),m.setFloat2("scale",1,h._features.needsInvertingBitmap&&p instanceof ImageBitmap?-1:1)},h.scenes.length&&(h.scenes[0].postProcessManager.directRender([m],T,!0,z,C),h.restoreDefaultFramebuffer(),r.dispose(),URL.revokeObjectURL(L),s())}))}))}else{if(h._uploadImageToTexture(x,p,z,C),v){const r=O[C];r&&h._uploadImageToTexture(r._texture,p,z,0)}s()}}))}async function E(p,h){let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s;if(!m.i.IsExponentOfTwo(p.width))throw new Error("Texture size must be a power of two");const C=(0,z.j)(p.width)+1,x=p.getEngine();let P=!1,G=!1,k=null,M=null,H=null;const I=x.getCaps();p.format=5,p.type=0,p.generateMipMaps=!0,p._cachedAnisotropicFilteringLevel=null,x.updateTextureSamplingMode(3,p),I.textureLOD?x._features.supportRenderAndCopyToLodForFloatTextures?I.textureHalfFloatRender&&I.textureHalfFloatLinearFiltering?(P=!0,p.type=2):I.textureFloatRender&&I.textureFloatLinearFiltering&&(P=!0,p.type=1):P=!1:(P=!1,G=!0,H={});let E=0;if(P)x.isWebGPU?(E=1,await r.e(18).then(r.bind(r,11350))):await r.e(14).then(r.bind(r,11358)),k=new T.e("rgbdDecode","rgbdDecode",null,null,1,null,3,x,!1,void 0,p.type,void 0,null,!1,void 0,E),p._isRGBD=!1,p.invertY=!1,M=x.createRenderTargetCubeTexture(p.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:p.type,format:5});else if(p._isRGBD=!0,p.invertY=!0,G){const h=3,r=p._lodGenerationScale,m=p._lodGenerationOffset;for(let L=0;L<h;L++){const z=(C-1)*r+m,T=m+(z-m)*(1-L/(h-1)),s=Math.round(Math.min(Math.max(T,0),z)),P=new v.e(x,2);P.isCube=!0,P.invertY=!0,P.generateMipMaps=!1,x.updateTextureSamplingMode(2,P);const G=new O.e(null);switch(G._isCube=!0,G._texture=P,H[s]=G,L){case 0:p._lodTextureLow=G;break;case 1:p._lodTextureMid=G;break;case 2:p._lodTextureHigh=G}}}const j=[];for(let r=0;r<h.length;r++)for(let m=0;m<6;m++){const z=h[r][m],C=new Blob([z],{type:L}),v=URL.createObjectURL(C);let O;if(x._features.forceBitmapOverHTMLImageElement)O=x.createImageBitmap(C,{premultiplyAlpha:"none"}).then((h=>U(h,x,P,k,v,m,r,G,H,M,p)));else{const h=new Image;h.src=v,O=new Promise(((L,z)=>{h.onload=()=>{U(h,x,P,k,v,m,r,G,H,M,p).then((()=>L())).catch((p=>{z(p)}))},h.onerror=p=>{z(p)}}))}j.push(O)}if(h.length<C){let r;const m=Math.pow(2,C-1-h.length),L=m*m*4;switch(p.type){case 0:r=new Uint8Array(L);break;case 2:r=new Uint16Array(L);break;case 1:r=new Float32Array(L)}for(let m=h.length;m<C;m++)for(let h=0;h<6;h++)x._uploadArrayBufferViewToTexture(p,r,h,m)}return Promise.all(j).then((()=>{M&&(x._releaseTexture(p),M._swapAndDie(p)),k&&k.dispose(),G&&(p._lodTextureHigh&&p._lodTextureHigh._texture&&(p._lodTextureHigh._texture.isReady=!0),p._lodTextureMid&&p._lodTextureMid._texture&&(p._lodTextureMid._texture.isReady=!0),p._lodTextureLow&&p._lodTextureLow._texture&&(p._lodTextureLow._texture.isReady=!0))}))}function j(p,h){const r=(h=M(h)).irradiance;if(!r)return;const m=new C.g;L.m.FromArrayToRef(r.x,0,m.x),L.m.FromArrayToRef(r.y,0,m.y),L.m.FromArrayToRef(r.z,0,m.z),L.m.FromArrayToRef(r.xx,0,m.xx),L.m.FromArrayToRef(r.yy,0,m.yy),L.m.FromArrayToRef(r.zz,0,m.zz),L.m.FromArrayToRef(r.yz,0,m.yz),L.m.FromArrayToRef(r.zx,0,m.zx),L.m.FromArrayToRef(r.xy,0,m.xy),p._sphericalPolynomial=m}function c(p,h,r,m,L){const z=E(p.getEngine().createRawCubeTexture(null,p.width,p.format,p.type,p.generateMipMaps,p.invertY,p.samplingMode,p._compression),h).then((()=>p));return p.onRebuildCallback=p=>({proxy:z,isReady:!0,isAsync:!0}),p._source=13,p._bufferViewArrayArray=h,p._lodGenerationScale=m,p._lodGenerationOffset=L,p._sphericalPolynomial=r,E(p,h).then((()=>(p.isReady=!0,p)))}},2693:(p,h,r)=>{r.d(h,{b:()=>z});var m=r(2548),L=r(2537);class z{static ExpandRGBDTexture(p){const h=p._texture;if(!h||!p.isRGBD)return;const L=h.getEngine(),z=L.getCaps(),C=h.isReady;let v=!1;z.textureHalfFloatRender&&z.textureHalfFloatLinearFiltering?(v=!0,h.type=2):z.textureFloatRender&&z.textureFloatLinearFiltering&&(v=!0,h.type=1),v&&(h.isReady=!1,h._isRGBD=!1,h.invertY=!1);const O=async()=>{const z=L.isWebGPU,C=z?1:0;h.isReady=!1,z?await Promise.all([r.e(18).then(r.bind(r,11350)),r.e(19).then(r.bind(r,11356))]):await Promise.all([r.e(14).then(r.bind(r,11358)),r.e(15).then(r.bind(r,11365))]);const v=new m.e("rgbdDecode","rgbdDecode",null,null,1,null,3,L,!1,void 0,h.type,void 0,null,!1,void 0,C);v.externalTextureSamplerBinding=!0;const O=L.createRenderTargetTexture(h.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:h.samplingMode,type:h.type,format:5});v.onEffectCreatedObservable.addOnce((r=>{r.executeWhenCompiled((()=>{v.onApply=p=>{p._bindTexture("textureSampler",h),p.setFloat2("scale",1,1)},p.getScene().postProcessManager.directRender([v],O,!0),L.restoreDefaultFramebuffer(),L._releaseTexture(h),v&&v.dispose(),O._swapAndDie(h),h.isReady=!0}))}))};v&&(C?O():p.onLoadObservable.addOnce(O))}static EncodeTextureToRGBD(p,h){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.e)("rgbdEncode",p,h,r,1,5)}}}}]);